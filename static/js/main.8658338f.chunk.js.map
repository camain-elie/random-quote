{"version":3,"sources":["components/Quote.js","components/Author.js","App.js","index.js"],"names":["Quote","props","className","quote","onClick","authorClick","author","genre","Author","returnClick","quoteList","map","item","index","quoteText","APIURL","getRandomQuote","a","fetch","response","json","jsonData","getAuthorQuotes","console","log","App","handleRandomQuote","bind","handleAuthorClick","switchDisplayQuote","state","displayQuote","authorQuoteList","then","res","data","setState","quoteAuthor","quoteGenre","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8658338f.chunk.js","sourcesContent":["import './Quote.scss'\r\n\r\nfunction Quote (props) {\r\n    return(\r\n        <div className=\"quote\">\r\n            <div className=\"quote__text\">\r\n                {`\"${props.quote}\"`}\r\n            </div>\r\n\r\n            <div className=\"quote__button\" onClick={props.authorClick}>\r\n                <div className=\"quote__author\">{props.author}</div>\r\n                <div className=\"quote__genre\">{props.genre}</div>\r\n                <p className=\"material-icons quote__arrow\">trending_flat</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote","import './Quote.scss'\r\n\r\nfunction Author (props) {\r\n    return(\r\n        <div className=\"quote\">\r\n            \r\n            <div className=\"quote__author quote__author-bold\">\r\n                <div className=\"quote__return\" onClick={props.returnClick}>\r\n                    <p>\r\n                        <span className=\"material-icons icon\">\r\n                            keyboard_backspace\r\n                        </span>\r\n                        go back to quote\r\n                    </p>\r\n                </div>\r\n                <p>{props.author}</p>\r\n            </div>\r\n\r\n            <div className=\"quote__quotes\">\r\n                {props.quoteList.map((item, index) => \r\n                    <div className=\"quote__text\" key={index}>\r\n                        {`\"${item.quoteText}\"`}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Author","import { Component } from 'react'\nimport Quote from './components/Quote'\nimport Author from './components/Author'\n\nimport './App.scss';\n\nconst APIURL = 'https://quote-garden.herokuapp.com/api/v3/quotes/'\n\nconst getRandomQuote = async () => {\n  const response = await fetch(`${APIURL}random`)\n  const jsonData = await response.json()\n  return jsonData\n}\n\nconst getAuthorQuotes = async (author) => {\n  console.log('get quotes')\n  const response = await fetch(`${APIURL}/?author=${author}`)\n  const jsonData = await response.json()\n  return jsonData\n}\n\nclass App extends Component {\n  constructor(){\n    super()\n\n    this.handleRandomQuote = this.handleRandomQuote.bind(this)\n    this.handleAuthorClick = this.handleAuthorClick.bind(this)\n    this.switchDisplayQuote = this.switchDisplayQuote.bind(this)\n\n    this.state = {\n      author: '',\n      quote: '',\n      genre: '',\n      displayQuote: true,\n      authorQuoteList: [],\n    }\n  }\n\n  componentDidMount(){\n    getRandomQuote()\n    .then(res => {\n      const quote = res.data[0]\n      this.setState({\n        author: quote.quoteAuthor,\n        quote: quote.quoteText,\n        genre: quote.quoteGenre,\n      })\n    })\n  }\n\n  handleRandomQuote(){\n    console.log('random')\n    getRandomQuote()\n    .then(res => {\n      const quote = res.data[0]\n      this.setState({\n        author: quote.quoteAuthor,\n        quote: quote.quoteText,\n        genre: quote.quoteGenre,\n        displayQuote: true,\n      })\n    })\n  }\n\n  handleAuthorClick(){\n    console.log('author click')\n    this.setState({ authorQuoteList: [] })\n    this.switchDisplayQuote()\n    getAuthorQuotes(this.state.author)\n    .then(res => {\n      this.setState({\n        authorQuoteList: res.data\n      })\n    })\n  }\n\n  switchDisplayQuote(){\n    console.log('switch')\n    this.setState({ displayQuote: !this.state.displayQuote})\n  }\n\n  render(){\n\n    const state = this.state\n\n    return(\n      <div className=\"App\">\n\n        <div className=\"random\" onClick={() => this.handleRandomQuote()}>\n          <p>random <span className=\"material-icons icon\">autorenew</span></p>\n        </div>\n\n\n        {this.state.displayQuote ?\n          (state.quote && <Quote\n            quote={state.quote}\n            author={state.author}\n            genre={state.genre}\n            authorClick={this.handleAuthorClick}\n          />)\n          :\n          <Author \n            author={state.author}\n            quoteList={state.authorQuoteList}\n            returnClick={this.switchDisplayQuote}\n          />}\n        \n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}